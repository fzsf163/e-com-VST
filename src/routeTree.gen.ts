/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UserRouteImport } from './routes/user/route'
import { Route as StoreRouteImport } from './routes/_store/route'
import { Route as StoreIndexImport } from './routes/_store/index'
import { Route as StoreOffersImport } from './routes/_store/offers'
import { Route as StoreAboutImport } from './routes/_store/about'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as auth500Import } from './routes/(auth)/500'
import { Route as UserAuthenticatedRouteImport } from './routes/user/_authenticated/route'
import { Route as UserAuthenticatedIndexImport } from './routes/user/_authenticated/index'

// Create Virtual Routes

const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const authSignUpLazyImport = createFileRoute('/(auth)/sign-up')()
const authSignIn2LazyImport = createFileRoute('/(auth)/sign-in-2')()
const authForgotPasswordLazyImport = createFileRoute(
  '/(auth)/forgot-password',
)()
const UserAuthenticatedSettingsRouteLazyImport = createFileRoute(
  '/user/_authenticated/settings',
)()
const UserAuthenticatedUsersIndexLazyImport = createFileRoute(
  '/user/_authenticated/users/',
)()
const UserAuthenticatedSettingsIndexLazyImport = createFileRoute(
  '/user/_authenticated/settings/',
)()
const UserAuthenticatedProductsIndexLazyImport = createFileRoute(
  '/user/_authenticated/products/',
)()
const UserAuthenticatedOrdersIndexLazyImport = createFileRoute(
  '/user/_authenticated/orders/',
)()
const UserAuthenticatedHelpCenterIndexLazyImport = createFileRoute(
  '/user/_authenticated/help-center/',
)()
const UserAuthenticatedDraftsIndexLazyImport = createFileRoute(
  '/user/_authenticated/drafts/',
)()
const UserAuthenticatedChatsIndexLazyImport = createFileRoute(
  '/user/_authenticated/chats/',
)()
const UserAuthenticatedAppsIndexLazyImport = createFileRoute(
  '/user/_authenticated/apps/',
)()
const UserAuthenticatedAcheckoutsIndexLazyImport = createFileRoute(
  '/user/_authenticated/acheckouts/',
)()
const UserAuthenticatedSettingsNotificationsLazyImport = createFileRoute(
  '/user/_authenticated/settings/notifications',
)()
const UserAuthenticatedSettingsDisplayLazyImport = createFileRoute(
  '/user/_authenticated/settings/display',
)()
const UserAuthenticatedSettingsAppearanceLazyImport = createFileRoute(
  '/user/_authenticated/settings/appearance',
)()
const UserAuthenticatedSettingsAccountLazyImport = createFileRoute(
  '/user/_authenticated/settings/account',
)()
const UserAuthenticatedProductsSectionIndexLazyImport = createFileRoute(
  '/user/_authenticated/products/$section/',
)()

// Create/Update Routes

const UserRouteRoute = UserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => rootRoute,
} as any)

const StoreRouteRoute = StoreRouteImport.update({
  id: '/_store',
  getParentRoute: () => rootRoute,
} as any)

const StoreIndexRoute = StoreIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StoreRouteRoute,
} as any)

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const authSignUpLazyRoute = authSignUpLazyImport
  .update({
    id: '/(auth)/sign-up',
    path: '/sign-up',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-up.lazy').then((d) => d.Route))

const authSignIn2LazyRoute = authSignIn2LazyImport
  .update({
    id: '/(auth)/sign-in-2',
    path: '/sign-in-2',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/sign-in-2.lazy').then((d) => d.Route))

const authForgotPasswordLazyRoute = authForgotPasswordLazyImport
  .update({
    id: '/(auth)/forgot-password',
    path: '/forgot-password',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/forgot-password.lazy').then((d) => d.Route),
  )

const StoreOffersRoute = StoreOffersImport.update({
  id: '/offers',
  path: '/offers',
  getParentRoute: () => StoreRouteRoute,
} as any)

const StoreAboutRoute = StoreAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => StoreRouteRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/(auth)/otp',
  path: '/otp',
  getParentRoute: () => rootRoute,
} as any)

const auth500Route = auth500Import.update({
  id: '/(auth)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const UserAuthenticatedRouteRoute = UserAuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => UserRouteRoute,
} as any)

const UserAuthenticatedIndexRoute = UserAuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => UserAuthenticatedRouteRoute,
} as any)

const UserAuthenticatedSettingsRouteLazyRoute =
  UserAuthenticatedSettingsRouteLazyImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => UserAuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/settings/route.lazy').then(
      (d) => d.Route,
    ),
  )

const UserAuthenticatedUsersIndexLazyRoute =
  UserAuthenticatedUsersIndexLazyImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => UserAuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/users/index.lazy').then(
      (d) => d.Route,
    ),
  )

const UserAuthenticatedSettingsIndexLazyRoute =
  UserAuthenticatedSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => UserAuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/settings/index.lazy').then(
      (d) => d.Route,
    ),
  )

const UserAuthenticatedProductsIndexLazyRoute =
  UserAuthenticatedProductsIndexLazyImport.update({
    id: '/products/',
    path: '/products/',
    getParentRoute: () => UserAuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/products/index.lazy').then(
      (d) => d.Route,
    ),
  )

const UserAuthenticatedOrdersIndexLazyRoute =
  UserAuthenticatedOrdersIndexLazyImport.update({
    id: '/orders/',
    path: '/orders/',
    getParentRoute: () => UserAuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/orders/index.lazy').then(
      (d) => d.Route,
    ),
  )

const UserAuthenticatedHelpCenterIndexLazyRoute =
  UserAuthenticatedHelpCenterIndexLazyImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => UserAuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/help-center/index.lazy').then(
      (d) => d.Route,
    ),
  )

const UserAuthenticatedDraftsIndexLazyRoute =
  UserAuthenticatedDraftsIndexLazyImport.update({
    id: '/drafts/',
    path: '/drafts/',
    getParentRoute: () => UserAuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/drafts/index.lazy').then(
      (d) => d.Route,
    ),
  )

const UserAuthenticatedChatsIndexLazyRoute =
  UserAuthenticatedChatsIndexLazyImport.update({
    id: '/chats/',
    path: '/chats/',
    getParentRoute: () => UserAuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/chats/index.lazy').then(
      (d) => d.Route,
    ),
  )

const UserAuthenticatedAppsIndexLazyRoute =
  UserAuthenticatedAppsIndexLazyImport.update({
    id: '/apps/',
    path: '/apps/',
    getParentRoute: () => UserAuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/apps/index.lazy').then((d) => d.Route),
  )

const UserAuthenticatedAcheckoutsIndexLazyRoute =
  UserAuthenticatedAcheckoutsIndexLazyImport.update({
    id: '/acheckouts/',
    path: '/acheckouts/',
    getParentRoute: () => UserAuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/acheckouts/index.lazy').then(
      (d) => d.Route,
    ),
  )

const UserAuthenticatedSettingsNotificationsLazyRoute =
  UserAuthenticatedSettingsNotificationsLazyImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => UserAuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/settings/notifications.lazy').then(
      (d) => d.Route,
    ),
  )

const UserAuthenticatedSettingsDisplayLazyRoute =
  UserAuthenticatedSettingsDisplayLazyImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => UserAuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/settings/display.lazy').then(
      (d) => d.Route,
    ),
  )

const UserAuthenticatedSettingsAppearanceLazyRoute =
  UserAuthenticatedSettingsAppearanceLazyImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => UserAuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/settings/appearance.lazy').then(
      (d) => d.Route,
    ),
  )

const UserAuthenticatedSettingsAccountLazyRoute =
  UserAuthenticatedSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => UserAuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/settings/account.lazy').then(
      (d) => d.Route,
    ),
  )

const UserAuthenticatedProductsSectionIndexLazyRoute =
  UserAuthenticatedProductsSectionIndexLazyImport.update({
    id: '/products/$section/',
    path: '/products/$section/',
    getParentRoute: () => UserAuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/user/_authenticated/products/$section/index.lazy').then(
      (d) => d.Route,
    ),
  )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_store': {
      id: '/_store'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof StoreRouteImport
      parentRoute: typeof rootRoute
    }
    '/user': {
      id: '/user'
      path: '/user'
      fullPath: '/user'
      preLoaderRoute: typeof UserRouteImport
      parentRoute: typeof rootRoute
    }
    '/user/_authenticated': {
      id: '/user/_authenticated'
      path: ''
      fullPath: '/user'
      preLoaderRoute: typeof UserAuthenticatedRouteImport
      parentRoute: typeof UserRouteImport
    }
    '/(auth)/500': {
      id: '/(auth)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof auth500Import
      parentRoute: typeof rootRoute
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof rootRoute
    }
    '/_store/about': {
      id: '/_store/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof StoreAboutImport
      parentRoute: typeof StoreRouteImport
    }
    '/_store/offers': {
      id: '/_store/offers'
      path: '/offers'
      fullPath: '/offers'
      preLoaderRoute: typeof StoreOffersImport
      parentRoute: typeof StoreRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-in-2': {
      id: '/(auth)/sign-in-2'
      path: '/sign-in-2'
      fullPath: '/sign-in-2'
      preLoaderRoute: typeof authSignIn2LazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/_store/': {
      id: '/_store/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof StoreIndexImport
      parentRoute: typeof StoreRouteImport
    }
    '/user/_authenticated/settings': {
      id: '/user/_authenticated/settings'
      path: '/settings'
      fullPath: '/user/settings'
      preLoaderRoute: typeof UserAuthenticatedSettingsRouteLazyImport
      parentRoute: typeof UserAuthenticatedRouteImport
    }
    '/user/_authenticated/': {
      id: '/user/_authenticated/'
      path: '/'
      fullPath: '/user/'
      preLoaderRoute: typeof UserAuthenticatedIndexImport
      parentRoute: typeof UserAuthenticatedRouteImport
    }
    '/user/_authenticated/settings/account': {
      id: '/user/_authenticated/settings/account'
      path: '/account'
      fullPath: '/user/settings/account'
      preLoaderRoute: typeof UserAuthenticatedSettingsAccountLazyImport
      parentRoute: typeof UserAuthenticatedSettingsRouteLazyImport
    }
    '/user/_authenticated/settings/appearance': {
      id: '/user/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/user/settings/appearance'
      preLoaderRoute: typeof UserAuthenticatedSettingsAppearanceLazyImport
      parentRoute: typeof UserAuthenticatedSettingsRouteLazyImport
    }
    '/user/_authenticated/settings/display': {
      id: '/user/_authenticated/settings/display'
      path: '/display'
      fullPath: '/user/settings/display'
      preLoaderRoute: typeof UserAuthenticatedSettingsDisplayLazyImport
      parentRoute: typeof UserAuthenticatedSettingsRouteLazyImport
    }
    '/user/_authenticated/settings/notifications': {
      id: '/user/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/user/settings/notifications'
      preLoaderRoute: typeof UserAuthenticatedSettingsNotificationsLazyImport
      parentRoute: typeof UserAuthenticatedSettingsRouteLazyImport
    }
    '/user/_authenticated/acheckouts/': {
      id: '/user/_authenticated/acheckouts/'
      path: '/acheckouts'
      fullPath: '/user/acheckouts'
      preLoaderRoute: typeof UserAuthenticatedAcheckoutsIndexLazyImport
      parentRoute: typeof UserAuthenticatedRouteImport
    }
    '/user/_authenticated/apps/': {
      id: '/user/_authenticated/apps/'
      path: '/apps'
      fullPath: '/user/apps'
      preLoaderRoute: typeof UserAuthenticatedAppsIndexLazyImport
      parentRoute: typeof UserAuthenticatedRouteImport
    }
    '/user/_authenticated/chats/': {
      id: '/user/_authenticated/chats/'
      path: '/chats'
      fullPath: '/user/chats'
      preLoaderRoute: typeof UserAuthenticatedChatsIndexLazyImport
      parentRoute: typeof UserAuthenticatedRouteImport
    }
    '/user/_authenticated/drafts/': {
      id: '/user/_authenticated/drafts/'
      path: '/drafts'
      fullPath: '/user/drafts'
      preLoaderRoute: typeof UserAuthenticatedDraftsIndexLazyImport
      parentRoute: typeof UserAuthenticatedRouteImport
    }
    '/user/_authenticated/help-center/': {
      id: '/user/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/user/help-center'
      preLoaderRoute: typeof UserAuthenticatedHelpCenterIndexLazyImport
      parentRoute: typeof UserAuthenticatedRouteImport
    }
    '/user/_authenticated/orders/': {
      id: '/user/_authenticated/orders/'
      path: '/orders'
      fullPath: '/user/orders'
      preLoaderRoute: typeof UserAuthenticatedOrdersIndexLazyImport
      parentRoute: typeof UserAuthenticatedRouteImport
    }
    '/user/_authenticated/products/': {
      id: '/user/_authenticated/products/'
      path: '/products'
      fullPath: '/user/products'
      preLoaderRoute: typeof UserAuthenticatedProductsIndexLazyImport
      parentRoute: typeof UserAuthenticatedRouteImport
    }
    '/user/_authenticated/settings/': {
      id: '/user/_authenticated/settings/'
      path: '/'
      fullPath: '/user/settings/'
      preLoaderRoute: typeof UserAuthenticatedSettingsIndexLazyImport
      parentRoute: typeof UserAuthenticatedSettingsRouteLazyImport
    }
    '/user/_authenticated/users/': {
      id: '/user/_authenticated/users/'
      path: '/users'
      fullPath: '/user/users'
      preLoaderRoute: typeof UserAuthenticatedUsersIndexLazyImport
      parentRoute: typeof UserAuthenticatedRouteImport
    }
    '/user/_authenticated/products/$section/': {
      id: '/user/_authenticated/products/$section/'
      path: '/products/$section'
      fullPath: '/user/products/$section'
      preLoaderRoute: typeof UserAuthenticatedProductsSectionIndexLazyImport
      parentRoute: typeof UserAuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface StoreRouteRouteChildren {
  StoreAboutRoute: typeof StoreAboutRoute
  StoreOffersRoute: typeof StoreOffersRoute
  StoreIndexRoute: typeof StoreIndexRoute
}

const StoreRouteRouteChildren: StoreRouteRouteChildren = {
  StoreAboutRoute: StoreAboutRoute,
  StoreOffersRoute: StoreOffersRoute,
  StoreIndexRoute: StoreIndexRoute,
}

const StoreRouteRouteWithChildren = StoreRouteRoute._addFileChildren(
  StoreRouteRouteChildren,
)

interface UserAuthenticatedSettingsRouteLazyRouteChildren {
  UserAuthenticatedSettingsAccountLazyRoute: typeof UserAuthenticatedSettingsAccountLazyRoute
  UserAuthenticatedSettingsAppearanceLazyRoute: typeof UserAuthenticatedSettingsAppearanceLazyRoute
  UserAuthenticatedSettingsDisplayLazyRoute: typeof UserAuthenticatedSettingsDisplayLazyRoute
  UserAuthenticatedSettingsNotificationsLazyRoute: typeof UserAuthenticatedSettingsNotificationsLazyRoute
  UserAuthenticatedSettingsIndexLazyRoute: typeof UserAuthenticatedSettingsIndexLazyRoute
}

const UserAuthenticatedSettingsRouteLazyRouteChildren: UserAuthenticatedSettingsRouteLazyRouteChildren =
  {
    UserAuthenticatedSettingsAccountLazyRoute:
      UserAuthenticatedSettingsAccountLazyRoute,
    UserAuthenticatedSettingsAppearanceLazyRoute:
      UserAuthenticatedSettingsAppearanceLazyRoute,
    UserAuthenticatedSettingsDisplayLazyRoute:
      UserAuthenticatedSettingsDisplayLazyRoute,
    UserAuthenticatedSettingsNotificationsLazyRoute:
      UserAuthenticatedSettingsNotificationsLazyRoute,
    UserAuthenticatedSettingsIndexLazyRoute:
      UserAuthenticatedSettingsIndexLazyRoute,
  }

const UserAuthenticatedSettingsRouteLazyRouteWithChildren =
  UserAuthenticatedSettingsRouteLazyRoute._addFileChildren(
    UserAuthenticatedSettingsRouteLazyRouteChildren,
  )

interface UserAuthenticatedRouteRouteChildren {
  UserAuthenticatedSettingsRouteLazyRoute: typeof UserAuthenticatedSettingsRouteLazyRouteWithChildren
  UserAuthenticatedIndexRoute: typeof UserAuthenticatedIndexRoute
  UserAuthenticatedAcheckoutsIndexLazyRoute: typeof UserAuthenticatedAcheckoutsIndexLazyRoute
  UserAuthenticatedAppsIndexLazyRoute: typeof UserAuthenticatedAppsIndexLazyRoute
  UserAuthenticatedChatsIndexLazyRoute: typeof UserAuthenticatedChatsIndexLazyRoute
  UserAuthenticatedDraftsIndexLazyRoute: typeof UserAuthenticatedDraftsIndexLazyRoute
  UserAuthenticatedHelpCenterIndexLazyRoute: typeof UserAuthenticatedHelpCenterIndexLazyRoute
  UserAuthenticatedOrdersIndexLazyRoute: typeof UserAuthenticatedOrdersIndexLazyRoute
  UserAuthenticatedProductsIndexLazyRoute: typeof UserAuthenticatedProductsIndexLazyRoute
  UserAuthenticatedUsersIndexLazyRoute: typeof UserAuthenticatedUsersIndexLazyRoute
  UserAuthenticatedProductsSectionIndexLazyRoute: typeof UserAuthenticatedProductsSectionIndexLazyRoute
}

const UserAuthenticatedRouteRouteChildren: UserAuthenticatedRouteRouteChildren =
  {
    UserAuthenticatedSettingsRouteLazyRoute:
      UserAuthenticatedSettingsRouteLazyRouteWithChildren,
    UserAuthenticatedIndexRoute: UserAuthenticatedIndexRoute,
    UserAuthenticatedAcheckoutsIndexLazyRoute:
      UserAuthenticatedAcheckoutsIndexLazyRoute,
    UserAuthenticatedAppsIndexLazyRoute: UserAuthenticatedAppsIndexLazyRoute,
    UserAuthenticatedChatsIndexLazyRoute: UserAuthenticatedChatsIndexLazyRoute,
    UserAuthenticatedDraftsIndexLazyRoute:
      UserAuthenticatedDraftsIndexLazyRoute,
    UserAuthenticatedHelpCenterIndexLazyRoute:
      UserAuthenticatedHelpCenterIndexLazyRoute,
    UserAuthenticatedOrdersIndexLazyRoute:
      UserAuthenticatedOrdersIndexLazyRoute,
    UserAuthenticatedProductsIndexLazyRoute:
      UserAuthenticatedProductsIndexLazyRoute,
    UserAuthenticatedUsersIndexLazyRoute: UserAuthenticatedUsersIndexLazyRoute,
    UserAuthenticatedProductsSectionIndexLazyRoute:
      UserAuthenticatedProductsSectionIndexLazyRoute,
  }

const UserAuthenticatedRouteRouteWithChildren =
  UserAuthenticatedRouteRoute._addFileChildren(
    UserAuthenticatedRouteRouteChildren,
  )

interface UserRouteRouteChildren {
  UserAuthenticatedRouteRoute: typeof UserAuthenticatedRouteRouteWithChildren
}

const UserRouteRouteChildren: UserRouteRouteChildren = {
  UserAuthenticatedRouteRoute: UserAuthenticatedRouteRouteWithChildren,
}

const UserRouteRouteWithChildren = UserRouteRoute._addFileChildren(
  UserRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof StoreRouteRouteWithChildren
  '/user': typeof UserAuthenticatedRouteRouteWithChildren
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/about': typeof StoreAboutRoute
  '/offers': typeof StoreOffersRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof StoreIndexRoute
  '/user/settings': typeof UserAuthenticatedSettingsRouteLazyRouteWithChildren
  '/user/': typeof UserAuthenticatedIndexRoute
  '/user/settings/account': typeof UserAuthenticatedSettingsAccountLazyRoute
  '/user/settings/appearance': typeof UserAuthenticatedSettingsAppearanceLazyRoute
  '/user/settings/display': typeof UserAuthenticatedSettingsDisplayLazyRoute
  '/user/settings/notifications': typeof UserAuthenticatedSettingsNotificationsLazyRoute
  '/user/acheckouts': typeof UserAuthenticatedAcheckoutsIndexLazyRoute
  '/user/apps': typeof UserAuthenticatedAppsIndexLazyRoute
  '/user/chats': typeof UserAuthenticatedChatsIndexLazyRoute
  '/user/drafts': typeof UserAuthenticatedDraftsIndexLazyRoute
  '/user/help-center': typeof UserAuthenticatedHelpCenterIndexLazyRoute
  '/user/orders': typeof UserAuthenticatedOrdersIndexLazyRoute
  '/user/products': typeof UserAuthenticatedProductsIndexLazyRoute
  '/user/settings/': typeof UserAuthenticatedSettingsIndexLazyRoute
  '/user/users': typeof UserAuthenticatedUsersIndexLazyRoute
  '/user/products/$section': typeof UserAuthenticatedProductsSectionIndexLazyRoute
}

export interface FileRoutesByTo {
  '/user': typeof UserAuthenticatedIndexRoute
  '/500': typeof errors500LazyRoute
  '/otp': typeof authOtpRoute
  '/sign-in': typeof authSignInRoute
  '/about': typeof StoreAboutRoute
  '/offers': typeof StoreOffersRoute
  '/forgot-password': typeof authForgotPasswordLazyRoute
  '/sign-in-2': typeof authSignIn2LazyRoute
  '/sign-up': typeof authSignUpLazyRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/503': typeof errors503LazyRoute
  '/': typeof StoreIndexRoute
  '/user/settings/account': typeof UserAuthenticatedSettingsAccountLazyRoute
  '/user/settings/appearance': typeof UserAuthenticatedSettingsAppearanceLazyRoute
  '/user/settings/display': typeof UserAuthenticatedSettingsDisplayLazyRoute
  '/user/settings/notifications': typeof UserAuthenticatedSettingsNotificationsLazyRoute
  '/user/acheckouts': typeof UserAuthenticatedAcheckoutsIndexLazyRoute
  '/user/apps': typeof UserAuthenticatedAppsIndexLazyRoute
  '/user/chats': typeof UserAuthenticatedChatsIndexLazyRoute
  '/user/drafts': typeof UserAuthenticatedDraftsIndexLazyRoute
  '/user/help-center': typeof UserAuthenticatedHelpCenterIndexLazyRoute
  '/user/orders': typeof UserAuthenticatedOrdersIndexLazyRoute
  '/user/products': typeof UserAuthenticatedProductsIndexLazyRoute
  '/user/settings': typeof UserAuthenticatedSettingsIndexLazyRoute
  '/user/users': typeof UserAuthenticatedUsersIndexLazyRoute
  '/user/products/$section': typeof UserAuthenticatedProductsSectionIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_store': typeof StoreRouteRouteWithChildren
  '/user': typeof UserRouteRouteWithChildren
  '/user/_authenticated': typeof UserAuthenticatedRouteRouteWithChildren
  '/(auth)/500': typeof auth500Route
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/_store/about': typeof StoreAboutRoute
  '/_store/offers': typeof StoreOffersRoute
  '/(auth)/forgot-password': typeof authForgotPasswordLazyRoute
  '/(auth)/sign-in-2': typeof authSignIn2LazyRoute
  '/(auth)/sign-up': typeof authSignUpLazyRoute
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/_store/': typeof StoreIndexRoute
  '/user/_authenticated/settings': typeof UserAuthenticatedSettingsRouteLazyRouteWithChildren
  '/user/_authenticated/': typeof UserAuthenticatedIndexRoute
  '/user/_authenticated/settings/account': typeof UserAuthenticatedSettingsAccountLazyRoute
  '/user/_authenticated/settings/appearance': typeof UserAuthenticatedSettingsAppearanceLazyRoute
  '/user/_authenticated/settings/display': typeof UserAuthenticatedSettingsDisplayLazyRoute
  '/user/_authenticated/settings/notifications': typeof UserAuthenticatedSettingsNotificationsLazyRoute
  '/user/_authenticated/acheckouts/': typeof UserAuthenticatedAcheckoutsIndexLazyRoute
  '/user/_authenticated/apps/': typeof UserAuthenticatedAppsIndexLazyRoute
  '/user/_authenticated/chats/': typeof UserAuthenticatedChatsIndexLazyRoute
  '/user/_authenticated/drafts/': typeof UserAuthenticatedDraftsIndexLazyRoute
  '/user/_authenticated/help-center/': typeof UserAuthenticatedHelpCenterIndexLazyRoute
  '/user/_authenticated/orders/': typeof UserAuthenticatedOrdersIndexLazyRoute
  '/user/_authenticated/products/': typeof UserAuthenticatedProductsIndexLazyRoute
  '/user/_authenticated/settings/': typeof UserAuthenticatedSettingsIndexLazyRoute
  '/user/_authenticated/users/': typeof UserAuthenticatedUsersIndexLazyRoute
  '/user/_authenticated/products/$section/': typeof UserAuthenticatedProductsSectionIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/user'
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/about'
    | '/offers'
    | '/forgot-password'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/user/settings'
    | '/user/'
    | '/user/settings/account'
    | '/user/settings/appearance'
    | '/user/settings/display'
    | '/user/settings/notifications'
    | '/user/acheckouts'
    | '/user/apps'
    | '/user/chats'
    | '/user/drafts'
    | '/user/help-center'
    | '/user/orders'
    | '/user/products'
    | '/user/settings/'
    | '/user/users'
    | '/user/products/$section'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/user'
    | '/500'
    | '/otp'
    | '/sign-in'
    | '/about'
    | '/offers'
    | '/forgot-password'
    | '/sign-in-2'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/503'
    | '/'
    | '/user/settings/account'
    | '/user/settings/appearance'
    | '/user/settings/display'
    | '/user/settings/notifications'
    | '/user/acheckouts'
    | '/user/apps'
    | '/user/chats'
    | '/user/drafts'
    | '/user/help-center'
    | '/user/orders'
    | '/user/products'
    | '/user/settings'
    | '/user/users'
    | '/user/products/$section'
  id:
    | '__root__'
    | '/_store'
    | '/user'
    | '/user/_authenticated'
    | '/(auth)/500'
    | '/(auth)/otp'
    | '/(auth)/sign-in'
    | '/_store/about'
    | '/_store/offers'
    | '/(auth)/forgot-password'
    | '/(auth)/sign-in-2'
    | '/(auth)/sign-up'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_store/'
    | '/user/_authenticated/settings'
    | '/user/_authenticated/'
    | '/user/_authenticated/settings/account'
    | '/user/_authenticated/settings/appearance'
    | '/user/_authenticated/settings/display'
    | '/user/_authenticated/settings/notifications'
    | '/user/_authenticated/acheckouts/'
    | '/user/_authenticated/apps/'
    | '/user/_authenticated/chats/'
    | '/user/_authenticated/drafts/'
    | '/user/_authenticated/help-center/'
    | '/user/_authenticated/orders/'
    | '/user/_authenticated/products/'
    | '/user/_authenticated/settings/'
    | '/user/_authenticated/users/'
    | '/user/_authenticated/products/$section/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  StoreRouteRoute: typeof StoreRouteRouteWithChildren
  UserRouteRoute: typeof UserRouteRouteWithChildren
  auth500Route: typeof auth500Route
  authOtpRoute: typeof authOtpRoute
  authSignInRoute: typeof authSignInRoute
  authForgotPasswordLazyRoute: typeof authForgotPasswordLazyRoute
  authSignIn2LazyRoute: typeof authSignIn2LazyRoute
  authSignUpLazyRoute: typeof authSignUpLazyRoute
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  StoreRouteRoute: StoreRouteRouteWithChildren,
  UserRouteRoute: UserRouteRouteWithChildren,
  auth500Route: auth500Route,
  authOtpRoute: authOtpRoute,
  authSignInRoute: authSignInRoute,
  authForgotPasswordLazyRoute: authForgotPasswordLazyRoute,
  authSignIn2LazyRoute: authSignIn2LazyRoute,
  authSignUpLazyRoute: authSignUpLazyRoute,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_store",
        "/user",
        "/(auth)/500",
        "/(auth)/otp",
        "/(auth)/sign-in",
        "/(auth)/forgot-password",
        "/(auth)/sign-in-2",
        "/(auth)/sign-up",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/_store": {
      "filePath": "_store/route.tsx",
      "children": [
        "/_store/about",
        "/_store/offers",
        "/_store/"
      ]
    },
    "/user": {
      "filePath": "user/route.tsx",
      "children": [
        "/user/_authenticated"
      ]
    },
    "/user/_authenticated": {
      "filePath": "user/_authenticated/route.tsx",
      "parent": "/user",
      "children": [
        "/user/_authenticated/settings",
        "/user/_authenticated/",
        "/user/_authenticated/acheckouts/",
        "/user/_authenticated/apps/",
        "/user/_authenticated/chats/",
        "/user/_authenticated/drafts/",
        "/user/_authenticated/help-center/",
        "/user/_authenticated/orders/",
        "/user/_authenticated/products/",
        "/user/_authenticated/users/",
        "/user/_authenticated/products/$section/"
      ]
    },
    "/(auth)/500": {
      "filePath": "(auth)/500.tsx"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx"
    },
    "/_store/about": {
      "filePath": "_store/about.tsx",
      "parent": "/_store"
    },
    "/_store/offers": {
      "filePath": "_store/offers.tsx",
      "parent": "/_store"
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.lazy.tsx"
    },
    "/(auth)/sign-in-2": {
      "filePath": "(auth)/sign-in-2.lazy.tsx"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.lazy.tsx"
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/_store/": {
      "filePath": "_store/index.tsx",
      "parent": "/_store"
    },
    "/user/_authenticated/settings": {
      "filePath": "user/_authenticated/settings/route.lazy.tsx",
      "parent": "/user/_authenticated",
      "children": [
        "/user/_authenticated/settings/account",
        "/user/_authenticated/settings/appearance",
        "/user/_authenticated/settings/display",
        "/user/_authenticated/settings/notifications",
        "/user/_authenticated/settings/"
      ]
    },
    "/user/_authenticated/": {
      "filePath": "user/_authenticated/index.tsx",
      "parent": "/user/_authenticated"
    },
    "/user/_authenticated/settings/account": {
      "filePath": "user/_authenticated/settings/account.lazy.tsx",
      "parent": "/user/_authenticated/settings"
    },
    "/user/_authenticated/settings/appearance": {
      "filePath": "user/_authenticated/settings/appearance.lazy.tsx",
      "parent": "/user/_authenticated/settings"
    },
    "/user/_authenticated/settings/display": {
      "filePath": "user/_authenticated/settings/display.lazy.tsx",
      "parent": "/user/_authenticated/settings"
    },
    "/user/_authenticated/settings/notifications": {
      "filePath": "user/_authenticated/settings/notifications.lazy.tsx",
      "parent": "/user/_authenticated/settings"
    },
    "/user/_authenticated/acheckouts/": {
      "filePath": "user/_authenticated/acheckouts/index.lazy.tsx",
      "parent": "/user/_authenticated"
    },
    "/user/_authenticated/apps/": {
      "filePath": "user/_authenticated/apps/index.lazy.tsx",
      "parent": "/user/_authenticated"
    },
    "/user/_authenticated/chats/": {
      "filePath": "user/_authenticated/chats/index.lazy.tsx",
      "parent": "/user/_authenticated"
    },
    "/user/_authenticated/drafts/": {
      "filePath": "user/_authenticated/drafts/index.lazy.tsx",
      "parent": "/user/_authenticated"
    },
    "/user/_authenticated/help-center/": {
      "filePath": "user/_authenticated/help-center/index.lazy.tsx",
      "parent": "/user/_authenticated"
    },
    "/user/_authenticated/orders/": {
      "filePath": "user/_authenticated/orders/index.lazy.tsx",
      "parent": "/user/_authenticated"
    },
    "/user/_authenticated/products/": {
      "filePath": "user/_authenticated/products/index.lazy.tsx",
      "parent": "/user/_authenticated"
    },
    "/user/_authenticated/settings/": {
      "filePath": "user/_authenticated/settings/index.lazy.tsx",
      "parent": "/user/_authenticated/settings"
    },
    "/user/_authenticated/users/": {
      "filePath": "user/_authenticated/users/index.lazy.tsx",
      "parent": "/user/_authenticated"
    },
    "/user/_authenticated/products/$section/": {
      "filePath": "user/_authenticated/products/$section/index.lazy.tsx",
      "parent": "/user/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
